name: CloudFormation Build
run-name: Build Stack in ${{ github.ref_name }} by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      aws-role-arn:
        description: 'Arn of the role to be assumed.'
        type: string
        required: true
        default: arn:aws:iam::637423502513:role/subhamay-github-oidc-role
      aws-region:
        description: AWS region where the services will be deployed
        type: string
        required: true
        default: us-east-1
      cfn-params-file:
        description: 'CloudFormation parameters file'
        type: string
        required: true
        default: './cfn/params/cfn-parameters.json'
      ci-build:
        description: 'Is this a Ci Build ?'
        type: boolean
        required: true
        default: true
      lambda:
        description: 'Is this repo contains Lambda?'
        type: boolean
        required: true
        default: false
      glue:
        description: 'Is this repo contains Glue?'
        type: boolean
        required: true
        default: false
      state-machine:
        description: 'Is this repo contains State Machine?'
        type: boolean
        required: true
        default: false

jobs:
  devsecops-scan:
    name: DevSecOps Scan
    runs-on: ubuntu-latest
    steps:
      - name: Scan the repo
        run: echo "Hello from Job 1. Run Job 3 equals ${{ github.event.inputs.run-job-3 }}"

  build-lambda-code:
    if:  github.event.inputs.lambda == 'true'
    name: Build Lambda code
    runs-on: ubuntu-latest
    needs:
      - devsecops-scan
    steps:
      - name: Build Code
        run: echo "Hello from Build Lambda code"
        
  build-glue-code:
    if:  github.event.inputs.glue == 'true'
    name: Build Glue code
    runs-on: ubuntu-latest
    needs:
      - devsecops-scan
    steps:
      - name: Build Glue Code
        run: echo "Hello from Build Glue code"

  build-state-machine:
    if:  github.event.inputs.state-machine == 'true'
    name: Build State Machine
    runs-on: ubuntu-latest
    needs:
      - devsecops-scan
    steps:
      - name: Build State Machine
        run: echo "Hello from Build State Machine"
        
  build-ci-stack:
    if: always()
    name: Build Ci Stack
    runs-on: ubuntu-latest
    needs:
      - build-lambda-code
      - build-glue-code
      - build-state-machine
    steps:
      - name: Create Ci Stack
        run: echo "Hello from Create Ci Stack"

  delete-ci-stack:
    if: always()
    name: Delete Ci Stack
    runs-on: ubuntu-latest
    needs:
      - build-ci-stack
    steps:
      - name: Delete Ci Stack
        run: echo "Hello from Delete Ci Stack"

  upload-artifacts:
    if: success()
    name: Upload Release Artifacts
    runs-on: ubuntu-latest
    needs:
      - delete-ci-stack
    steps:
      - name: Upload Release Artifacts
        run: echo "Hello from Upload Release Artifacts"

  create-release:
    if: success()
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - upload-artifacts
    steps:
      - name: Create Release
        run: echo "Hello from Create Release"

